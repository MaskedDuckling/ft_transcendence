FROM node:lts AS builder

# RUN apk add --no-cache libc6-compat
# RUN apk update

WORKDIR /app
RUN npm install -g turbo
COPY . .
RUN turbo prune --scope=nest-app --docker



# Add lockfile and package.json's of isolated subworkspace
FROM node:lts AS installer

# RUN apk add --no-cache libc6-compat
# RUN apk update

WORKDIR /app
COPY ./certs /app/certs
COPY .gitignore .gitignore
COPY --from=builder /app/out/json/ .
COPY --from=builder /app/out/package-lock.json ./package-lock.json
RUN npm install

COPY --from=builder /app/out/full/ .
COPY turbo.json turbo.json
RUN npx turbo run build --filter=nest-app...



FROM node:lts AS runner

WORKDIR /app
COPY --from=installer /app .
# COPY --from=installer /app/apps/nest-app/jest.config.js .
# COPY --from=installer /app/apps/nest-app/package.json ./package.json
WORKDIR /app/apps/nest-app
# EXPOSE 3000
EXPOSE 443


# CMD node apps/nest-app/server.js
CMD ["npm", "run", "start:dev"]


# FROM node:18-alpine AS base



# FROM base AS builder

# RUN apk add --no-cache libc6-compat
# RUN apk update

# WORKDIR /app
# RUN npm install -g turbo
# COPY . .

# RUN turbo prune --scope=nest-app --docker



# FROM base AS installer

# RUN apk add --no-cache libc6-compat
# RUN apk update

# WORKDIR /app
# COPY .gitignore .gitignore
# COPY --from=builder /app/out/json/ .
# COPY --from=builder /app/out/package-lock.json ./package-lock.json

# RUN npm install

# COPY --from=builder /app/out/full/ .
# COPY turbo.json turbo.json

# RUN npx turbo run build --filter=nest-app...



# FROM base AS runner

# WORKDIR /app
# RUN addgroup --system --gid 1001 expressjs
# RUN adduser --system --uid 1001 expressjs
# USER expressjs
# COPY --from=installer /app .

# CMD ["npm", "run", "start"]

